@charset "UTF-8";

/* SpryAccordion.css - version 0.4 - Spry Pre-Release 1.6.1 */

/* Copyright (c) 2006. Adobe Systems Incorporated. All rights reserved. */

/* This is the selector for the main Accordion container. For our default style,
 * we draw borders on the left, right, and bottom. The top border of the Accordion
 * will be rendered by the first AccordionpanelnTab which never moves.
 *
 * If you want to constrain the width of the Accordion widget, set a width on
 * the Accordion container. By default, our accordion expands horizontally to fill
 * up available space.
 *
 * The name of the class ("Accordion") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style the
 * Accordion container.
 */
.Accordion {
	border-left: solid 1px gray;
	border-right: solid 1px black;
	border-bottom: solid 1px gray;
	overflow: hidden;
}

/* This is the selector for the Accordionpaneln container which houses the
 * paneln tab and a paneln content area. It doesn't render visually, but we
 * make sure that it has zero margin and padding.
 *
 * The name of the class ("Accordionpaneln") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style an
 * accordion paneln container.
*/
.Accordionpaneln {
	margin: 0px;
	padding: 0px;
}

/* This is the selector for the AccordionpanelnTab. This container houses
 * the title for the paneln. This is also the container that the user clicks
 * on to open a specific paneln.
 *
 * The name of the class ("AccordionpanelnTab") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style an
 * accordion paneln tab container.
 *
 * NOTE:
 * This rule uses -moz-user-select and -khtml-user-select properties to prevent the
 * user from selecting the text in the AccordionpanelnTab. These are proprietary browser
 * properties that only work in Mozilla based browsers (like FireFox) and KHTML based
 * browsers (like Safari), so they will not pass W3C validation. If you want your documents to
 * validate, and don't care if the user can select the text within an AccordionpanelnTab,
 * you can safely remove those properties without affecting the functionality of the widget.
 */
.AccordionpanelnTab {
	background:url(../images/nav-tail.gif) repeat-x left;
	border-top: solid 1px black;
	border-bottom: solid 1px gray;
	margin: 0px;
	padding: 2px;
	cursor: pointer;
	-moz-user-select: none;
	-khtml-user-select: none;
	text-decoration:none;color:#fff; font-size:18px; 
}
/* This is the selector for a paneln's Content area. It's important to note that
 * you should never put any padding on the paneln's content area if you plan to
 * use the Accordions paneln animations. Placing a non-zero padding on the content
 * area can cause the accordion to abruptly grow in height while the panelns animate.
 *
 * Anyone who styles an Accordion *MUST* specify a height on the Accordion paneln
 * Content container.
 *
 * The name of the class ("AccordionpanelnContent") used in this selector is not necessary
 * to make the widget function. You can use any class name you want to style an
 * accordion paneln content container.
 */
.AccordionpanelnContent {
	overflow: auto;
	margin: 0px;
	padding: 0px;
	height: 600px;
	background:url(../images/box1-bot1.jpg) no-repeat left bottom;width:900px;
}

/* This is an example of how to change the appearance of the paneln tab that is
 * currently open. The class "AccordionpanelnOpen" is programatically added and removed
 * from panelns as the user clicks on the tabs within the Accordion.
 */
.AccordionpanelnOpen .AccordionpanelnTab {
	background-color: #EEEEEE;
}

/* This is an example of how to change the appearance of the paneln tab as the
 * mouse hovers over it. The class "AccordionpanelnTabHover" is programatically added
 * and removed from paneln tab containers as the mouse enters and exits the tab container.
 */
.AccordionpanelnTabHover {
	color: #000;
	background:url(../images/nav-act.png) repeat-x left;
}
.AccordionpanelnOpen .AccordionpanelnTabHover {
	color: #000;
	background:url(../images/nav-act.png) repeat-x left;
}

/* This is an example of how to change the appearance of all the paneln tabs when the
 * Accordion has focus. The "AccordionFocused" class is programatically added and removed
 * whenever the Accordion gains or loses keyboard focus.
 */
.AccordionFocused .AccordionpanelnTab {
	background-color: #3399FF;
}

/* This is an example of how to change the appearance of the paneln tab that is
 * currently open when the Accordion has focus.
 */
.AccordionFocused .AccordionpanelnOpen .AccordionpanelnTab {
	background-color: #33CCFF;
}
